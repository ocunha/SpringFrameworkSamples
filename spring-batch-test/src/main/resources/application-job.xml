<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	<context:annotation-config />
	<context:component-scan base-package="br.osnir.batch" />
	
	<beans:import resource="integration-pipeline.xml"/>
	<beans:import resource="datasource/data-sources.xml"/>

	<job id="jobCalculatePersonTax">
		<step id="stepCalculatePersonTax">
			<tasklet>
				<chunk reader="itemReader" writer="itemFileWriter" processor="itemProcessor" commit-interval="1"
					skip-limit="5000">
					<skippable-exception-classes>
						<include class="java.lang.RuntimeException" />
					</skippable-exception-classes>
				</chunk>
			</tasklet>
		</step>
		<listeners>
			<listener ref="itemListener" />
		</listeners>
	</job>

	<beans:bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<beans:property name="resource" value="file:input.csv" />
		<beans:property name="lineMapper">
			<beans:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<beans:property name="delimiter" value="|"/>
						<beans:property name="names" value="id,name,salary,dependents"/>
					</beans:bean>
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<beans:property name="prototypeBeanName" value="person" />
					</beans:bean>
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="person" class="br.osnir.batch.object.Person" />

	<beans:bean id="itemDBReader"
		class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<beans:property name="dataSource" ref="dataSourceReader" />
		<beans:property name="verifyCursorPosition" value="false" />
		<beans:property name="rowMapper" ref="rowMapper" />
		<beans:property name="sql">
			<beans:value>
				<![CDATA[SELECT id, name, salary, dependents from tb_person]]>
			</beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="itemDBWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<beans:property name="dataSource" ref="dataSourceWriter" />
		<beans:property name="itemPreparedStatementSetter" ref="itemPreparedStatementSetter" />
		<beans:property name="sql">
			<beans:value>
				<![CDATA[INSERT INTO tb_person_tax(person_id, free, tax, date) VALUES (?, ?, ?, ?)]]>
			</beans:value>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="itemFileWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<beans:property name="resource" value="file:output.file" />
		<beans:property name="appendAllowed" value="true" />
		<beans:property name="lineAggregator">
		  <beans:bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
			<beans:property name="delimiter" value="," />
			<beans:property name="fieldExtractor">
			  <beans:bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
				<beans:property name="names" value="person.id,person.name,person.salary,person.dependents,free,tax,date" />
			  </beans:bean>
			</beans:property>
		  </beans:bean>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="itemProcessor" class="br.osnir.batch.processor.MyItemProcessor">
		<beans:property name="integrationInputChannel" ref="integrationInputChannel" />
		<beans:constructor-arg>
			<beans:bean class="org.springframework.integration.core.MessagingTemplate" />
		</beans:constructor-arg>
	</beans:bean>

</beans:beans>
